buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.0.RELEASE'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.7.2'
        classpath 'org.ajoberstar:gradle-git:1.4.2'
    }
}
plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
    id 'application'
    id 'idea'
}
apply plugin: 'io.spring.dependency-management'

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://ons.jfrog.io/ons/libs-releases-virtual'
        credentials {
            username "${artifactory_user}"
            password "${artifactory_password}"
        }
    }
    maven {
        url 'https://ons.jfrog.io/ons/libs-snapshots-virtual'
        credentials {
            username "${artifactory_user}"
            password "${artifactory_password}"
        }
    }
}

configurations {
    jaxb
}

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "${projectDir}/src/main/resources/wsdl"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask',
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir) {
                arg(value: '-wsdl')
                produces(dir: sourcesDir, includes: '**/*.java')
                schema(dir: schema, includes: '**/*.wsdl')
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: 'lines,vars,source',
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: '**/*.java')
                include(name: '*.java')
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: '**/*.java')
                }
            }
        }
    }
}

dependencies {
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.1.7'

    compile 'javax.xml.soap:javax.xml.soap-api:1.4.0'
    compile 'javax.xml.bind:jaxb-api:2.3.0'
    compile 'com.sun.xml.bind:jaxb-core:2.3.0'
    compile 'com.sun.xml.bind:jaxb-impl:2.3.0'
    compile 'com.sun.xml.messaging.saaj:saaj-impl:1.5.0'
    compile 'javax.xml.ws:jaxws-api:2.2.6'

    compile(files(genJaxb.classesDir).builtBy(genJaxb))
    compile("uk.gov.ons.census.fwmt:census-fwmt-events:1.0.20-RELEASE")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.cloud:spring-cloud-gcp-starter-pubsub'

    testImplementation 'junit:junit:4.12'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    compile("uk.gov.ons:census-fsdr-common:0.0.8-RELEASE")
    compile('io.springfox:springfox-swagger2:2.9.2')
    compile('io.springfox:springfox-swagger-ui:2.9.2')
    compile 'com.github.joschi.jackson:jackson-datatype-threetenbp:2.6.4'
    
    compile 'com.google.api-client:google-api-client:1.23.0'
	compile 'com.google.apis:google-api-services-admin-directory:directory_v1-rev53-1.20.0'
    
    compile 'org.apache.mina:mina-core:1.1.7'
    compile 'org.apache.sshd:sshd-core:1.7.0'
    compile("com.opencsv:opencsv:5.0")

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR1"
    }
}

mainClassName = 'uk.gov.ons.fsdr.adeccomock.AdeccoMock'
group = 'uk.gov.ons'
version = rootProject.file('version.txt').text.trim()
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenLocal()
    mavenCentral()
    if (!project.hasProperty('omitSDCArtifactory')) {
        maven { url 'http://artifactory-sdc.onsdigital.uk/artifactory/libs-release-local' }
        maven { url 'http://artifactory-sdc.onsdigital.uk/artifactory/libs-snapshot-local' }
    }
}

